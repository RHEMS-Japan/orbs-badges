description: >
  Generate badges from the services of RHEMS BADGES.

parameters:
  api_token:
    #type: env_var_name
    type: string
    default: $API_TOKEN
    description: "The API Token of RHEMS BADGES. (Required)"
  organization:
    type: string
    default: $CIRCLE_PROJECT_USERNAME
    description: "organization name (Required)"
  repo:
    type: string
    default: $CIRCLE_PROJECT_REPONAME
    description: "if repo is empty it will use ${CIRCLE_PROJECT_REPONAME} (optional)"
  app:
    type: string
    default: $CIRCLE_PROJECT_REPONAME
    description: "app name (Required)"
  status:
    type: string
    default: "true"
    description: "set status true or false. (Required)"
  branch:
    type: string
    default: $CIRCLE_BRANCH
    description: "if branche is empty it will use ${CIRCLE_BRANCH} (optional)"
  color:
    type: string
    default: ""
    description: "you can set color (optional)"
  text:
    type: string
    default: ""
    description: "write text for right side (optional)"
  update_readme:
    type: string
    default: "true"
    description: "set true or false to update readme"
  file_path:
    type: string
    default: ./README.md
    description: "path of README.md"
  user_name:
    type: string
    default: "badge auto update"
    description: "GitHub user.name"
  user_email:
    type: string
    default: "badges@rhems-japan.co.jp"
    description: "GitHub user.email"

steps:
  - run:
      when: on_fail
      name: RHEMS BADGE - Detecting Job Status (FAIL)
      command: |
        echo 'export STATUS=false' > /tmp/RHEMS_JOB_STATUS
  - run:
      when: on_success
      name: RHEMS BADGE  - Detecting Job Status (PASS)
      command: |
        echo 'export STATUS=true' > /tmp/RHEMS_JOB_STATUS
  - run:
      when: always
      name: Execute curl command
      environment:
        TOKEN: << parameters.api_token >>
        ORGANIZATION: << parameters.organization >>
        REPO: << parameters.repo >>
        APP: << parameters.app >>
        BRANCH: << parameters.branch >>
        STATUS: << parameters.status >>
        COLOR: << parameters.color >>
        TEXT: << parameters.text >>
        GIT_USER_NAME: << parameters.user_name >>
        GIT_USER_EMAIL: << parameters.user_email >>
        FILE_PATH: << parameters.file_path >>
        UPDATE_README: << parameters.update_readme >>
      command: << include(scripts/create.sh) >>
